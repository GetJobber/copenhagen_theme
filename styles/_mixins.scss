// Mixins
@mixin tablet {
  @media (min-width: #{$tablet-width}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$desktop-width}) {
    @content;
  }
}

@mixin max-width-container {
  @media (min-width: #{$max-width-container}) {
    width: 90%;
    padding: 0;
  }
  max-width: $max-width-container;
  margin: 0 auto;
  padding: 0 5%;
}

@mixin vertical-align {
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}

@mixin text-overflow {
  word-wrap: break-word; //IE/Edge compatibility
  word-break: break-word;
  -moz-hyphens: auto;
  -ms-hyphens: auto;
  -webkit-hyphens: auto;
}

@mixin focus-ring {
  outline: 0;
  box-shadow: 0 0 0 3px $brand_color;
}

@mixin content-body {
  img {
    max-width: 100%;
    height: auto;
  }

  ul, ol {
    margin: 20px 0 20px 20px;
    padding-left: 20px;
    list-style-position: outside;

    [dir='rtl'] & {
      margin-right: 20px;
      margin-left: 0;
      padding-right: 20px;
      padding-left: 0;
    }
  }

  // Sub level list
  ul > ul, ol > ol, ol > ul, ul > ol, li > ul, li > ol {
    margin: 0;
  }

  ul {
    list-style-type: disc;
  }

  a:visited { color: $visited-link-color; }

  code {
    margin: 0 2px;
    padding: 0 5px;
    border: 1px solid $border-color;
    border-radius: 3px;
    background: $primary-shade;
  }

  pre {
    padding: 10px 15px;
    overflow: auto;
    border: 1px solid $border-color;
    border-radius: 3px;
    background: $primary-shade;
    white-space: pre;
  }

  blockquote {
    padding: 0 15px;
    border-left: 1px solid $border-color;
    color: $secondary-text-color;
    font-style: italic;
  }
}

// JOBBER MIXINS

/**
 * Source: https://www.smashingmagazine.com/2016/05/fluid-typography/
 */
@mixin fluid-value( $properties, $min-vw, $max-vw, $min-value, $max-value ) {
  @each $property in $properties {
    #{$property}: $min-value;
  }
  @media screen and (min-width: $min-vw) {
    @each $property in $properties {
      #{$property}:
        calc(#{$min-value} + #{strip-unit($max-value - $min-value)} *
        (
          100vw - #{$min-vw}
        ) / #{strip-unit($max-vw - $min-vw)});
    }
  }
  @media screen and (min-width: $max-vw) {
    @each $property in $properties {
      #{$property}: $max-value;
    }
  }
}

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}
